#!/usr/bin/env bash
# any failure in a pipe is a problem
set -o pipefail
## do not tolerate unset variables
set -o nounset
# don't try to remember where things are
set +o hashall

set -o errtrace

## show the environment we are building in
SOURCEY=sourcey
BUILD_DIR=$1
STAGE_DIR=$(dirname $BUILD_DIR)
CACHE_DIR=$2
PREFIX=$HOME/$SOURCEY
START_DIR=`pwd`
BUILDPACK_DIR=$(dirname `dirname $0`)
WORK_DIR=/tmp/$SOURCEY.$$
VERSION_DIR=`cd $(dirname $0); cd ..; pwd`
VERSION=`cat $VERSION_DIR/VERSION | sed 's/[\r\n]*$//'`
ARCHIVE=`basename $VERSION`
ARCHIVE_DIR=`echo $ARCHIVE | sed 's/\.tar\.gz$//'`



mkdir -p $WORK_DIR

source $BUILDPACK_DIR/lib/SourceyBuildLib.inc

mkdir -p $BUILD_DIR $CACHE_DIR

SB=$BUILD_DIR/SourceyBuild.sh
ls $SB
echo "       Environment"
echo "       -  BUILD_DIR=$BUILD_DIR"
echo "       -  WORK_DIR=$WORK_DIR"
echo "       -  STAGE_DIR=$STAGE_DIR"
echo "       -  PREFIX=$PREFIX"
echo "       -  CACHE_DIR=$CACHE_DIR"
echo "       -  BUILDPACK_DIR=$BUILDPACK_DIR"
echo "       -  VERSION_DIR=$VERSION_DIR"
echo "       -  ARCHIVE=$ARCHIVE"
echo "       -  ARCHIVE_DIR=$ARCHIVE_DIR"


if [ -f $SB ]; then
   # to force a full recompile, increment the Rx part of the md5sum
   # only do this if you change something fundamental in the compile
   # system
   MD5SUM=`md5sum $SB|awk '{print $1}'`.R2
   if egrep -qv '^SOURCEY_REBUILD=1' $SB && test -f "$CACHE_DIR/$SOURCEY/$MD5SUM"; then
      cp --verbose --archive $CACHE_DIR/$SOURCEY $STAGE_DIR |& progressor "Restoring binaries from $CACHE_DIR"
   else
      cd $WORK_DIR
      echo "       Environment"
      echo "       -  BUILD_DIR=$BUILD_DIR"
      echo "       -  WORK_DIR=$WORK_DIR"
      echo "       -  STAGE_DIR=$STAGE_DIR"
      echo "       -  PREFIX=$PREFIX"
      echo "       -  CACHE_DIR=$CACHE_DIR"
       
      source $SB
      if [ -d $PREFIX ]; then
          mv --verbose $PREFIX $STAGE_DIR |& progressor "Moving binaries to $STAGE_DIR ready for uploading" 1
          if [ -d $CACHE_DIR/$SOURCEY ]; then
              chmod -R u+rwx $CACHE_DIR/$SOURCEY
              rm -rf $CACHE_DIR/$SOURCEY
          fi
          cp --verbose --archive $STAGE_DIR/$SOURCEY $CACHE_DIR  |& progressor "Saveing a copy of your binaries to $CACHE_DIR for future use"
          touch $CACHE_DIR/$SOURCEY/$MD5SUM
      fi
   fi
fi

if [ -r $BUILD_DIR/SourceyBuildApp.sh ]; then
   cd $WORK_DIR
   source $BUILD_DIR/SourceyBuildApp.sh
fi

# compile lv project to speed up upload of droplet to DEA...just in case
SB_BIN_DIR=$CACHE_DIR/$SOURCEY/opt/tibco/sb-cep/7.5/bin
chmod -R +x $SB_BIN_DIR
echo "Compiling Liveview App project"
cd $SB_BIN_DIR
./lv-server compile $1

chmod 755 $BUILD_DIR/SourceyStart.sh

echo "Build haproxy now"
get_source() {
  if [ ! -d $CACHE_DIR ]; then
    echo "Creating $CACHE_DIR"
    mkdir $CACHE_DIR
  fi


  if [ -e $CACHE_DIR/$ARCHIVE ]; then
    echo "Don't need to download, already exists"
  else
    echo "Downloading $VERSION..."
    curl $VERSION -o $CACHE_DIR/$ARCHIVE
  fi
}

unpack_source() {
  if [ ! -d $CACHE_DIR/$ARCHIVE_DIR ]; then
    echo "Unpacking..."
    `tar xzf $CACHE_DIR/$ARCHIVE -C $CACHE_DIR`
  fi
}

compile_source() {
  unpack_source
  if [ ! -f $CACHE_DIR/$ARCHIVE_DIR/haproxy ]; then
    echo "Compiling $ARCHIVE_DIR..."
    cd $CACHE_DIR/$ARCHIVE_DIR
    make TARGET=linux2628 USE_OPENSSL=1
  fi
}

vendor_bin() {
  cp $CACHE_DIR/$ARCHIVE_DIR/haproxy $BUILD_DIR/haproxy
}

get_source
compile_source
vendor_bin

cd $HOME
rm -rf $WORK_DIR
echo "-----> Done haproxy compiling."

exit 0
